version: '3.7'
services:

  postgres:
    image: postgres:14-alpine
    container_name: postgres
    env_file:
      - './env/.env.prod'
    ports:
      - '54321:${POSTGRES_PORT}'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_NAME}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    volumes:
      - postgres_db_data:/var/lib/postgresql/db/data

  web:
    build:
      dockerfile: ./docker/app.prod.Dockerfile
      context: .
    container_name: web
    env_file:
      - './env/.env.prod'
    ports:
    - "8000:8000"
    restart: always
    volumes:
      - static_files:/home/admin/web/project/staticfiles
    depends_on:
      - postgres
  
  nginx:
    build: ./deploy/nginx
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - static_files:/home/admin/web/project/staticfiles/
    depends_on:
      - web

volumes:
  postgres_db_data:
  static_files: